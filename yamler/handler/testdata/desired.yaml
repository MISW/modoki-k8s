apiVersion: v1
kind: Service
metadata:
  labels:
    modoki.tsuzu.xyz/domain: app-name.example.com
    modoki.tsuzu.xyz/id: test-id
    modoki.tsuzu.xyz/owner: owner-id
  name: modoki-app-svc-test-id
  namespace: namespace-name
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: modoki-app-pod
    modoki.tsuzu.xyz/domain: app-name.example.com
    modoki.tsuzu.xyz/id: test-id
    modoki.tsuzu.xyz/owner: owner-id
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: modoki-app-pod
    modoki.tsuzu.xyz/domain: app-name.example.com
    modoki.tsuzu.xyz/id: test-id
    modoki.tsuzu.xyz/owner: owner-id
  name: modoki-app-deploy-test-id
  namespace: namespace-name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: modoki-app-pod
      modoki.tsuzu.xyz/domain: app-name.example.com
      modoki.tsuzu.xyz/id: test-id
      modoki.tsuzu.xyz/owner: owner-id
  template:
    metadata:
      labels:
        app: modoki-app-pod
        modoki.tsuzu.xyz/domain: app-name.example.com
        modoki.tsuzu.xyz/id: test-id
        modoki.tsuzu.xyz/owner: owner-id
    spec:
      containers:
      - args:
        - arg1
        - arg2
        command:
        - command1
        - command2
        env:
        - name: key1
          value: value1
        - name: key2
          value: value2
        image: image-name:latest
        imagePullPolicy: Always
        name: server
        ports:
        - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    modoki.tsuzu.xyz/domain: app-name.example.com
    modoki.tsuzu.xyz/id: test-id
    modoki.tsuzu.xyz/owner: owner-id
  name: modoki-app-ing-test-id
  namespace: namespace-name
spec:
  rules:
  - host: app-name.example.com
    http:
      paths:
      - backend:
          serviceName: modoki-app-svc-test-id
          servicePort: 80
        path: /
  tls:
  - hosts:
    - app-name.example.com
    secretName: secret-name
