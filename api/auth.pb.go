// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package modoki

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SignInRequest struct {
}

func (m *SignInRequest) Reset()                    { *m = SignInRequest{} }
func (m *SignInRequest) String() string            { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()               {}
func (*SignInRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type SignInResponse struct {
	RedirectUri string `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *SignInResponse) Reset()                    { *m = SignInResponse{} }
func (m *SignInResponse) String() string            { return proto.CompactTextString(m) }
func (*SignInResponse) ProtoMessage()               {}
func (*SignInResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SignInResponse) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *SignInResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type SignOutRequest struct {
}

func (m *SignOutRequest) Reset()                    { *m = SignOutRequest{} }
func (m *SignOutRequest) String() string            { return proto.CompactTextString(m) }
func (*SignOutRequest) ProtoMessage()               {}
func (*SignOutRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type SignOutResponse struct {
}

func (m *SignOutResponse) Reset()                    { *m = SignOutResponse{} }
func (m *SignOutResponse) String() string            { return proto.CompactTextString(m) }
func (*SignOutResponse) ProtoMessage()               {}
func (*SignOutResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type CallbackRequest struct {
	Code          string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	State         string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	ExpectedState string `protobuf:"bytes,3,opt,name=expected_state,json=expectedState" json:"expected_state,omitempty"`
}

func (m *CallbackRequest) Reset()                    { *m = CallbackRequest{} }
func (m *CallbackRequest) String() string            { return proto.CompactTextString(m) }
func (*CallbackRequest) ProtoMessage()               {}
func (*CallbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *CallbackRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CallbackRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *CallbackRequest) GetExpectedState() string {
	if m != nil {
		return m.ExpectedState
	}
	return ""
}

type CallbackResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *CallbackResponse) Reset()                    { *m = CallbackResponse{} }
func (m *CallbackResponse) String() string            { return proto.CompactTextString(m) }
func (*CallbackResponse) ProtoMessage()               {}
func (*CallbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *CallbackResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*SignInRequest)(nil), "modoki.SignInRequest")
	proto.RegisterType((*SignInResponse)(nil), "modoki.SignInResponse")
	proto.RegisterType((*SignOutRequest)(nil), "modoki.SignOutRequest")
	proto.RegisterType((*SignOutResponse)(nil), "modoki.SignOutResponse")
	proto.RegisterType((*CallbackRequest)(nil), "modoki.CallbackRequest")
	proto.RegisterType((*CallbackResponse)(nil), "modoki.CallbackResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error)
	SignOut(ctx context.Context, in *SignOutRequest, opts ...grpc.CallOption) (*SignOutResponse, error)
	Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error) {
	out := new(SignInResponse)
	err := grpc.Invoke(ctx, "/modoki.Auth/SignIn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) SignOut(ctx context.Context, in *SignOutRequest, opts ...grpc.CallOption) (*SignOutResponse, error) {
	out := new(SignOutResponse)
	err := grpc.Invoke(ctx, "/modoki.Auth/SignOut", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error) {
	out := new(CallbackResponse)
	err := grpc.Invoke(ctx, "/modoki.Auth/Callback", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	SignIn(context.Context, *SignInRequest) (*SignInResponse, error)
	SignOut(context.Context, *SignOutRequest) (*SignOutResponse, error)
	Callback(context.Context, *CallbackRequest) (*CallbackResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.Auth/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_SignOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).SignOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.Auth/SignOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).SignOut(ctx, req.(*SignOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Callback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Callback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modoki.Auth/Callback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Callback(ctx, req.(*CallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "modoki.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _Auth_SignIn_Handler,
		},
		{
			MethodName: "SignOut",
			Handler:    _Auth_SignOut_Handler,
		},
		{
			MethodName: "Callback",
			Handler:    _Auth_Callback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0x25, 0xbf, 0x5f, 0x1b, 0xeb, 0x68, 0x9b, 0x3a, 0x54, 0x0d, 0x39, 0x69, 0x40, 0xe8, 0x29,
	0x07, 0x3d, 0x08, 0x82, 0x07, 0xf5, 0xd4, 0x93, 0xd0, 0xe2, 0xc5, 0x4b, 0xc9, 0x9f, 0xc1, 0x2e,
	0xa9, 0xd9, 0xb8, 0x99, 0x05, 0x3f, 0x9b, 0x9f, 0x4e, 0xd8, 0x3f, 0x2d, 0x6d, 0xbd, 0xed, 0xbe,
	0x37, 0xf3, 0xde, 0xcc, 0x1b, 0x80, 0x5c, 0xf3, 0x2a, 0x6b, 0x95, 0x64, 0x89, 0xe1, 0xa7, 0xac,
	0x64, 0x2d, 0xd2, 0x08, 0x86, 0x0b, 0xf1, 0xd1, 0xcc, 0x9a, 0x39, 0x7d, 0x69, 0xea, 0x38, 0x9d,
	0xc1, 0xc8, 0x03, 0x5d, 0x2b, 0x9b, 0x8e, 0xf0, 0x1a, 0x4e, 0x15, 0x55, 0x42, 0x51, 0xc9, 0x4b,
	0xad, 0x44, 0x1c, 0x5c, 0x05, 0xd3, 0xe3, 0xf9, 0x89, 0xc7, 0xde, 0x94, 0xc0, 0x09, 0xf4, 0x3b,
	0xce, 0x99, 0xe2, 0x7f, 0x86, 0xb3, 0x9f, 0x74, 0x6c, 0xa5, 0x5e, 0x35, 0x7b, 0xf1, 0x33, 0x88,
	0x36, 0x88, 0x55, 0x4f, 0x0b, 0x88, 0x5e, 0xf2, 0xf5, 0xba, 0xc8, 0xcb, 0xda, 0x55, 0x21, 0x42,
	0xaf, 0x94, 0x15, 0x39, 0x23, 0xf3, 0xfe, 0xdb, 0x01, 0x6f, 0x60, 0x44, 0xdf, 0x2d, 0x95, 0x4c,
	0xd5, 0xd2, 0xd2, 0xff, 0x0d, 0x3d, 0xf4, 0xe8, 0xc2, 0x0c, 0x32, 0x85, 0xf1, 0xd6, 0xc3, 0x6d,
	0x35, 0x81, 0x3e, 0xcb, 0x9a, 0x1a, 0xe7, 0x62, 0x3f, 0xb7, 0x3f, 0x01, 0xf4, 0x9e, 0x34, 0xaf,
	0xf0, 0x1e, 0x42, 0x1b, 0x03, 0x9e, 0x67, 0x36, 0xaa, 0x6c, 0x27, 0xa7, 0xe4, 0x62, 0x1f, 0x76,
	0xba, 0x0f, 0x70, 0xe4, 0x56, 0xc4, 0x9d, 0x92, 0x6d, 0x0a, 0xc9, 0xe5, 0x01, 0xee, 0x7a, 0x1f,
	0x61, 0xe0, 0xe7, 0xc4, 0x4d, 0xd1, 0x5e, 0x3a, 0x49, 0x7c, 0x48, 0xd8, 0xf6, 0xe7, 0xc1, 0xbb,
	0xbb, 0x6a, 0x11, 0x9a, 0x23, 0xdf, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x81, 0xd9, 0xbf, 0x91,
	0xf2, 0x01, 0x00, 0x00,
}
